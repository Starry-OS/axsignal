name: CI

on: [push, pull_request]

jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust-toolchain: [nightly]
        targets: [x86_64-unknown-linux-gnu, x86_64-unknown-none, riscv64gc-unknown-none-elf, aarch64-unknown-none-softfloat]
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@nightly
      with:
        toolchain: ${{ matrix.rust-toolchain }}
        components: rust-src, clippy, rustfmt
        targets: ${{ matrix.targets }}

    - name: Set AX_CONFIG_PATH for aarch64-unknown-none-softfloat
      if: ${{ matrix.targets }} == 'aarch64-unknown-none-softfloat'
      run: echo "AX_CONFIG_PATH=$PWD/.github/aarch64-qemu-virt.toml" >> $GITHUB_ENV

    - name: Check rust version
      run: rustc --version --verbose
    - name: Check code format
      run: cargo fmt --all -- --check
    - name: Clippy
      run: cargo clippy --target ${{ matrix.targets }} --all-features -- -D warnings
    - name: Build
      run: cargo build --target ${{ matrix.targets }} --all-features
    - name: Unit test
      if: ${{ matrix.targets == 'x86_64-unknown-linux-gnu' }}
      run: cargo test --target ${{ matrix.targets }} -- --nocapture

  doc:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    permissions:
      contents: write
    env:
      default-branch: ${{ format('refs/heads/{0}', github.event.repository.default_branch) }}
      RUSTDOCFLAGS: -D rustdoc::broken_intra_doc_links -W missing-docs
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@nightly
    - name: Build docs
      continue-on-error: ${{ github.ref != env.default-branch && github.event_name != 'pull_request' }}
      run: |
        cargo doc --no-deps --all-features
        printf '<meta http-equiv="refresh" content="0;url=%s/index.html">' $(cargo tree | head -1 | cut -d' ' -f1) > target/doc/index.html
    - name: Upload static files as artifact
      id: deployment
      uses: actions/upload-pages-artifact@v3 # or specific "vX.X.X" version tag for this action
      with:
        path: target/doc/

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: doc

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
